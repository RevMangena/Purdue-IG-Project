pipeline {
    agent { label 'ansible-kubernetes' }

    environment {
        DOCKER_IMAGE_NAME = 'revmangena/my-tomcat-app'
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials' 
        KUBECONFIG = '/home/ubuntu/.kube/.kube/config'
    }

    stages {

        stage('Cleanup') {
            steps {
                sh '''
                    docker system prune -a -f
                    sudo apt-get clean
                    sudo apt-get autoremove -y
                '''
            }
        }
    }

        stage('1. Compile') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('2. Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('3. Package') {
            steps {
                sh 'mvn package'
            }
        }

        stage('Create Dockerfile') {
            steps {
                script {
                    // Prepare the Docker build context
                    sh '''
                        rm -rf /home/ubuntu/warfile
                        mkdir -p /home/ubuntu/warfile
                        cd /home/ubuntu/warfile || exit 1  // Ensure the directory change is successful
                        cp /tmp/jenkinsdir/workspace/AnsibleKubernetes/target/ABCtechnologies-1.0.war .
                    '''
                    // Create Dockerfile
                    writeFile file: '/home/ubuntu/warfile/Dockerfile', text: '''
                        FROM tomcat:9.0.73-jdk8-corretto-al2
                        COPY ABCtechnologies-1.0.war /usr/local/tomcat/webapps/
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                        cd /home/ubuntu/warfile
                        docker build -t my-tomcat-app .
                        docker tag my-tomcat-app ${DOCKER_IMAGE_NAME}
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                        sh 'docker push ${DOCKER_IMAGE_NAME}'
                }
            }
        }

        stage('Deploy as container') {
            steps {
                script {
                    sh '''
                        ansible-playbook -i /etc/ansible/inventory -u ubuntu /etc/ansible/docker_playbook.yml
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh '''
                        export KUBECONFIG=/home/ubuntu/.kube/config
                        ansible-playbook -i /etc/ansible/inventory -u ubuntu /etc/ansible/kubernetes_playbook.yml
                    '''
                }
            }
        }
    }
}
